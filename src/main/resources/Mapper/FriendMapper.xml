<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace绑定一个dao接口-->
<mapper namespace="com.example.demo.MyData.Dao.FriendDao">
    <resultMap type="com.example.demo.MyData.Entity.Friend" id="MyFriendMap">
        <!-- 指定主键列的封装规则
            id定义主键会底层有优化
            column:指定哪一列
            property:指定对应的javaBean属性
        -->
        <id column="user_id" property="userId"/>
        <!-- 定义普通列封装规则 -->
        <result column="friend_id" property="friendId"/>
        <result column="friend_name" property="friendName"/>
        <!-- 其他不指定的列会自动封装,推荐:只要写resultMap,就要把全部的映射规则都写上-->
        <result column="last_talk_time" property="lastTalkTime"/>
    </resultMap>
    <resultMap type="Date" id="DateMap">

        <result column="last_talk_time" property="lastTalkTime"/>
    </resultMap>

    <select id="getFriendList" resultMap="MyFriendMap">   <!-- 是resultMap不是resulttype -->
        SELECT *  FROM  friend_list WHERE user_id=#{userId}
    </select>
    <insert id="addFriend" parameterType="com.example.demo.MyData.Entity.Friend">
        INSERT INTO friend_list(user_id,friend_id,last_talk_time) VALUES (#{userId},#{friendId},#{lastTalkTime})
    </insert>
    <update id="updateLastTalkTime" >
    UPDATE  friend_list SET last_talk_time=#{lastTalkTime} WHERE user_id=#{userId} and friend_id=#{friendId}
</update>
    <select id="getLastTalkTime"  resultMap="DateMap">
        SELECT last_talk_time FROM  friend_list WHERE user_id=#{param1} and friend_id=#{param2}
    </select>


</mapper>
