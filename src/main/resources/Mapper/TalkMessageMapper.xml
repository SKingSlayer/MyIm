<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace绑定一个dao接口-->
<mapper namespace="com.example.demo.MyData.Dao.TalkMessageDao">
    <resultMap type="com.example.demo.MyData.Entity.TalkMessage" id="TalkMessageMap">
        <!-- 指定主键列的封装规则
            id定义主键会底层有优化
            column:指定哪一列
            property:指定对应的javaBean属性
        -->
        <id column="user_id" property="userId"/>
        <!-- 定义普通列封装规则 -->
        <result column="friend_id" property="friendId"/>
        <!-- 其他不指定的列会自动封装,推荐:只要写resultMap,就要把全部的映射规则都写上-->
        <result column="talk_time" property="talkTime"/>
        <result column="message" property="message"/>
    </resultMap>
    <insert id="saveTalkMessage" parameterType="com.example.demo.MyData.Entity.TalkMessage">
        INSERT INTO talk_message(user_id,friend_id,talk_time,message) VALUES (#{userId},#{friendId},#{talkTime},#{message})
    </insert>
    <select id="getTalkMessageByDate" resultMap="TalkMessageMap">

SELECT * from (SELECT *  FROM talk_message WHERE user_id=#{userId} and friend_id=#{friendId}) AS a where talk_time > #{talkTime}
Union SELECT * from (SELECT *  FROM talk_message WHERE user_id=#{friendId} and friend_id=#{userId}) AS a where talk_time > #{talkTime}

    </select>
    <select id="getTalkMessageById" resultMap="TalkMessageMap">

SELECT * from  talk_message  where id=#{id}

    </select>

</mapper>